version: "2.1"

services:
    rabbitmq:
        image: rabbitmq:3-management
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
        volumes:
            - ./rabbitmq:/start
        command: /start/init.sh
#        ports:
#          - "15672:15672"
#          - "5672:5672"
#          - "5671:5671"

    postgis:
        build: postgis
        restart: always
        volumes:
            - data-postgis:/var/lib/postgresql
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
#        ports:
#          - "5432:5432"

    php:
        restart: always
        build: php7-fpm
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ${MODFLOW_DATA_FOLDER}:/var/www/symfony/var/data
            - ./logs/php:/var/www/symfony/var/logs
        environment:
            XDEBUG_CONFIG: ${XDEBUG_CONFIG}
            PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}

    # amqp-listener on application
    php-cli:
        build: php7-cli
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
          - ${SYMFONY_APP_PATH}:/var/www/symfony
          - ./scripts:/app
        environment:
          XDEBUG_CONFIG: ${XDEBUG_CONFIG}
          PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
        command: php /var/www/symfony/bin/console inowas:calculation:listener

    # amqp-listener on application
    php-cli-with-geos:
        build: php7-cli-with-geos
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
          - ${SYMFONY_APP_PATH}:/var/www/symfony
          - ${MODFLOW_DATA_FOLDER}:/var/www/symfony/var/data
          - ./scripts:/app
        environment:
          XDEBUG_CONFIG: ${XDEBUG_CONFIG}
          PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
        command: php /var/www/symfony/bin/console inowas:calculation:request:listener

    nginx:
        build: nginx
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx

    varnish:
        build: varnish
        restart: always
        ports:
            - ${HTTP_PORT}:80
        environment:
            WEBSERVER: "nginx"
            WEBSERVER_PORT: "80"
        depends_on:
            - nginx

    modflow-calculation:
        build: modflow
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_calculation_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${CALCULATION_QUEUE}
        links:
          - rabbitmq

    modflow-read-data:
        restart: always
        build: modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data:ro
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_readdata_rpc_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${READ_DATA_QUEUE}
        links:
          - rabbitmq

    modflow-interpolation:
        restart: always
        build: modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data:ro
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_interpolation_rpc_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${INTERPOLATION_QUEUE}
        links:
          - rabbitmq

volumes:
    data-postgis:
        driver: local
