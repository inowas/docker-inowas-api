version: '2'

services:
    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3-management
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
        volumes:
            - ./rabbitmq:/start
        command: /start/init.sh
        ports:
          - "15672:15672"
          - "5672:5672"
          - "5671:5671"
    postgis:
        container_name: postgis
        build: postgis
        restart: always
        volumes:
            - data-postgis:/var/lib/postgresql
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}

    php:
        container_name: php
        build: php7-fpm
        volumes:
            - ${SYMFONY_APP_PATH}:/var/www/symfony
            - ./logs/symfony:/var/www/symfony/app/logs
        links:
           - postgis

    # amqp-listener on application
    php-cli:
        container_name: php-cli
        build: php7-cli
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
          - ${SYMFONY_APP_PATH}:/var/www/symfony
          - ./scripts:/app
        command: php /var/www/symfony/bin/console inowas:calculation:listener -vvv

    nginx:
        container_name: nginx
        build: nginx
        ports:
            - 8001:80
        volumes_from:
            - php
        volumes:
            - ./logs/nginx/:/var/log/nginx

    modflow-calculation:
        restart: always
        container_name: modflow-calculation
        build: modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
            - ./mfdata:/data
        command: /pymodelling/inowas_flopy_calculation_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${CALCULATION_QUEUE}

    modflow-read-data:
        restart: always
        container_name: modflow-read-data
        build: modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
            - ./mfdata:/data:ro
        command: /pymodelling/inowas_flopy_readdata_rpc_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${READ_DATA_QUEUE}

volumes:
    data-postgis:
        driver: local
