version: "2.1"

services:
    rabbitmq:
        image: rabbitmq:3.6-management
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
            RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
            - ./rabbitmq:/start
        command: /start/init.sh

    postgis:
        image: mdillon/postgis:9.6
        restart: always
        volumes:
            - postgis-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5432:5432"

    php:
        image: inowas/docker-php7-fpm-with-geos
        restart: always
        volumes:
            - ${API_PATH}:/var/www/symfony
            - ${MODFLOW_DATA_FOLDER}:/var/www/symfony/var/data
            - ./logs/php:/var/www/symfony/var/logs

    # amqp-listener on application
    php-cli:
        image: inowas/docker-php7-cli
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
          - ${API_PATH}:/var/www/symfony
          - ./scripts:/app
        command: php /var/www/symfony/bin/console inowas:calculation:listener

    nginx:
        image: inowas/docker-nginx
        restart: always
        ports:
            - ${API_HTTP_PORT}:80
        volumes_from:
            - php

    app:
        build: ${APP_PATH}
        restart: always
        ports:
            - ${APP_HTTP_PORT}:5000

    modflow-calculation:
        image: inowas/docker-modflow
        restart: always
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_calculation_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${CALCULATION_QUEUE}
        links:
          - rabbitmq

    modflow-read-data:
        restart: always
        image: inowas/docker-modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data:ro
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_readdata_rpc_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${READ_DATA_QUEUE}
        links:
          - rabbitmq

    modflow-interpolation:
        restart: always
        image: inowas/docker-modflow
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data:ro
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_flopy_interpolation_rpc_server /data rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${INTERPOLATION_QUEUE}
        links:
          - rabbitmq

    geoprocessing:
        restart: always
        image: inowas/docker-geoprocessing
        entrypoint:
          - /app/wait_for_rabbitmq.sh
        volumes:
            - ${MODFLOW_DATA_FOLDER}:/data:ro
            - ${PYMODELLING_APP_PATH}:/pymodelling
            - ./scripts:/app
        command: /pymodelling/inowas_geo_processing_rpc_server /data/raster rabbitmq 5672 ${RABBITMQ_VHOST} ${RABBITMQ_USER} ${RABBITMQ_PASS} ${GEO_PROCESSING_QUEUE}
        links:
          - rabbitmq

volumes:
    postgis-data:
        driver: local
    rabbitmq-data:
        driver: local
